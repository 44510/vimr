// Auto generated for nvim v0.9.0-dev
// See bin/generate_autocmds.py

enum NvimAutoCommandEvent: String {

 case bufadd = "bufadd"
 case bufdelete = "bufdelete"
 case bufenter = "bufenter"
 case buffilepost = "buffilepost"
 case buffilepre = "buffilepre"
 case bufhidden = "bufhidden"
 case bufleave = "bufleave"
 case bufmodifiedset = "bufmodifiedset"
 case bufnew = "bufnew"
 case bufnewfile = "bufnewfile"
 case bufreadcmd = "bufreadcmd"
 case bufreadpost = "bufreadpost"
 case bufreadpre = "bufreadpre"
 case bufunload = "bufunload"
 case bufwinenter = "bufwinenter"
 case bufwinleave = "bufwinleave"
 case bufwipeout = "bufwipeout"
 case bufwritecmd = "bufwritecmd"
 case bufwritepost = "bufwritepost"
 case bufwritepre = "bufwritepre"
 case chaninfo = "chaninfo"
 case chanopen = "chanopen"
 case cmdundefined = "cmdundefined"
 case cmdwinenter = "cmdwinenter"
 case cmdwinleave = "cmdwinleave"
 case cmdlinechanged = "cmdlinechanged"
 case cmdlineenter = "cmdlineenter"
 case cmdlineleave = "cmdlineleave"
 case colorscheme = "colorscheme"
 case colorschemepre = "colorschemepre"
 case completechanged = "completechanged"
 case completedone = "completedone"
 case completedonepre = "completedonepre"
 case cursorhold = "cursorhold"
 case cursorholdi = "cursorholdi"
 case cursormoved = "cursormoved"
 case cursormovedi = "cursormovedi"
 case diagnosticchanged = "diagnosticchanged"
 case diffupdated = "diffupdated"
 case dirchanged = "dirchanged"
 case dirchangedpre = "dirchangedpre"
 case encodingchanged = "encodingchanged"
 case exitpre = "exitpre"
 case fileappendcmd = "fileappendcmd"
 case fileappendpost = "fileappendpost"
 case fileappendpre = "fileappendpre"
 case filechangedro = "filechangedro"
 case filechangedshell = "filechangedshell"
 case filechangedshellpost = "filechangedshellpost"
 case filereadcmd = "filereadcmd"
 case filereadpost = "filereadpost"
 case filereadpre = "filereadpre"
 case filetype = "filetype"
 case filewritecmd = "filewritecmd"
 case filewritepost = "filewritepost"
 case filewritepre = "filewritepre"
 case filterreadpost = "filterreadpost"
 case filterreadpre = "filterreadpre"
 case filterwritepost = "filterwritepost"
 case filterwritepre = "filterwritepre"
 case focusgained = "focusgained"
 case focuslost = "focuslost"
 case funcundefined = "funcundefined"
 case guienter = "guienter"
 case guifailed = "guifailed"
 case insertchange = "insertchange"
 case insertcharpre = "insertcharpre"
 case insertenter = "insertenter"
 case insertleave = "insertleave"
 case insertleavepre = "insertleavepre"
 case lspattach = "lspattach"
 case lspdetach = "lspdetach"
 case menupopup = "menupopup"
 case modechanged = "modechanged"
 case optionset = "optionset"
 case quickfixcmdpost = "quickfixcmdpost"
 case quickfixcmdpre = "quickfixcmdpre"
 case quitpre = "quitpre"
 case recordingenter = "recordingenter"
 case recordingleave = "recordingleave"
 case remotereply = "remotereply"
 case searchwrapped = "searchwrapped"
 case sessionloadpost = "sessionloadpost"
 case shellcmdpost = "shellcmdpost"
 case shellfilterpost = "shellfilterpost"
 case signal = "signal"
 case sourcecmd = "sourcecmd"
 case sourcepost = "sourcepost"
 case sourcepre = "sourcepre"
 case spellfilemissing = "spellfilemissing"
 case stdinreadpost = "stdinreadpost"
 case stdinreadpre = "stdinreadpre"
 case swapexists = "swapexists"
 case syntax = "syntax"
 case tabclosed = "tabclosed"
 case tabenter = "tabenter"
 case tableave = "tableave"
 case tabnew = "tabnew"
 case tabnewentered = "tabnewentered"
 case termchanged = "termchanged"
 case termclose = "termclose"
 case termenter = "termenter"
 case termleave = "termleave"
 case termopen = "termopen"
 case termresponse = "termresponse"
 case textchanged = "textchanged"
 case textchangedi = "textchangedi"
 case textchangedp = "textchangedp"
 case textchangedt = "textchangedt"
 case textyankpost = "textyankpost"
 case uienter = "uienter"
 case uileave = "uileave"
 case user = "user"
 case vimenter = "vimenter"
 case vimleave = "vimleave"
 case vimleavepre = "vimleavepre"
 case vimresized = "vimresized"
 case vimresume = "vimresume"
 case vimsuspend = "vimsuspend"
 case winclosed = "winclosed"
 case winenter = "winenter"
 case winleave = "winleave"
 case winnew = "winnew"
 case winresized = "winresized"
 case winscrolled = "winscrolled"
}

